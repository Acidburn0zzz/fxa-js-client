{"version":3,"sources":["components/almond/almond.js","components/sjcl/sjcl.js","components/p/p.js","client/lib/hawk.js","client/lib/errors.js","client/lib/request.js","client/lib/hkdf.js","client/lib/pbkdf2.js","client/lib/credentials.js","client/lib/hawkCredentials.js","client/lib/metricsContext.js","client/FxAccountClient.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","load","alt","setTimeout","cfg","amd","jQuery","sjcl","factory","P","withStackThrowing","error","stack","getTrace","withStack","stacks","filterStackString","currentTrace","pop","getFileNameAndLineNumber","stackLine","m","exec","fileName","lineNumber","Number","captureLine","lines","firstLine","pos","pFileName","ignoreFirstLines","goodLines","l","line","isNodeFrame","isInternalFrame","push","pStartingLine","pEndingLine","makeStackTraceLong","STACK_JUMP_SEPARATOR","TaskNode","a","b","next","ot","type","throwFirstError","pendingErrors","shift","flush","head","tail","h","nFreeTaskNodes","flushing","schedule","node","requestFlush","requestFlushForNodeJS","currentDomain","process","domain","active","hasSetImmediate","setImmediate","nextTick","makeRequestCallFromMutationObserver","toggle","document","createTextNode","observer","gMutationObserver","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setInterval","DoneEb","onerror","x","Promise","Resolve","Fulfill","_state","FULFILLED","_value","_domain","HandleSettled","Reject","reason","REJECTED","isNodeJS","_op","OP_END","handleError","Propagate","parent","ResolveWithPromise","ResolveWithObject","TypeError","OnSettled","OP_THEN","then","GetThen","TryResolver","resolverFor","d","resolver","resolve","reject","_pending","HandlePending","op","pending","_cb","OP_CALL","Then","OP_MULTIPLE","cb","_eb","_trace","HandleCallback","_disposed","enter","exit","promise","nodelike","y","trace","longStackSupport","defer","_allSettled_cb","inspect","_all_cb","all","input","nextIsAllSettled","len","Array","allSettled","spread","values","eb","promised","onFulfilled","thisAndArgs","denodeify","TryApply","that","toString","MutationObserver","WebKitMutationObserver","requestErrorThrow","VOID","onRejected","done","fail","fin","finback","fb","self","timeout","ms","msg","timedout","timeoutId","delay","state","nodeify","nodeback","task","hawk","client","header","method","options","result","field","artifacts","err","timestamp","Math","floor","utils","now","localtimeOffsetMsec","credentials","key","algorithm","baseIndexOf","crypto","algorithms","parseUri","ts","nonce","randomString","resource","relative","host","hostname","port","hash","ext","app","dlg","calculatePayloadHash","payload","contentType","mac","calculateMac","hasExt","undefined","escapeHeaderAttribute","authenticate","request","getResponseHeader","attrsAuth","parseAuthorizationHeader","tsm","calculateTsMac","setNtpOffset","Date","getTime","required","attributes","modArtifacts","calculatedHash","message","authenticateTimestamp","updateClock","headerVersion","normalized","generateNormalizedString","hmac","misc","sha256","update","codec","base64","fromBits","digest","toUpperCase","toLowerCase","replace","parseContentType","finalize","storage","_cache","setItem","getItem","setStorage","ntpOffset","getNtpOffset","offset","console","parseInt","attribute","keys","headerParts","match","scheme","attributesString","verify","$0","$1","$2","size","randomSource","random","array","fromIndex","uriRegex","uriByNumber","protocol","INVALID_TIMESTAMP","INCORRECT_EMAIL_CASE","ERRORS","Request","baseUri","xhr","_localtimeOffsetMsec","XMLHttpRequest","send","path","jsonPayload","deferred","JSON","stringify","open","errno","onreadystatechange","readyState","responseText","parse","retrying","serverTime","status","code","hawkHeader","setRequestHeader","headers","hkdf","ikm","info","salt","prk","hashLength","num_blocks","ceil","prev","hex","toBits","output","bitArray","utf8String","String","fromCharCode","truncated","clamp","pbkdf2","derive","iterations","kw","NAMESPACE","kwe","email","PBKDF2_ROUNDS","STRETCHED_PASS_LENGTH_BYTES","HKDF_SALT","HKDF_LENGTH","setup","emailInput","passwordInput","password","emailUTF8","passwordUTF8","quickStretchedPW","authPW","unwrapBKey","xor","bitArray1","bitArray2","unbundleKeyFetchResponse","bundle","bitBundle","deriveBundleKeys","ciphertext","bitSlice","expectedHmac","hmacKey","equal","keyAWrapB","xorKey","kA","wrapKB","keyInfo","bitKeyInfo","keyMaterial","deriveHawkCredentials","tokenHex","context","token","PREFIX_NAME","out","authKey","bundleKey","marshall","flowId","flowBeginTime","hawkCredentials","metricsContext","isUndefined","val","isNull","isEmptyObject","isEmptyString","FxAccountClient","uriVersionRegExp","test","VERSION","checkCreds","creds","oldUnwrapBKey","keyFetchToken","passwordChangeToken","RegExp","HKDF_SIZE","signUp","endpoint","requestOpts","service","redirectTo","preVerified","resume","lang","Accept-Language","accountData","signIn","unblockCode","skipCaseError","verifyCode","uid","reminder","marketingOptIn","recoveryEmailStatus","sessionToken","recoveryEmailResendCode","passwordForgotSendCode","passwordForgotResendCode","passwordForgotToken","passwordForgotVerifyCode","passwordForgotStatus","accountReset","newPassword","accountResetToken","queryParams","accountKeys","kB","accountDestroy","response","accountStatus","accountStatusByEmail","sessionDestroy","customSessionToken","sessionStatus","certificateSign","publicKey","duration","queryString","encodeURIComponent","passwordChange","oldPassword","_passwordChangeStart","oldCreds","_passwordChangeKeys","_passwordChangeFinish","oldAuthPW","passwordData","defers","newCreds","hawkCreds","sessionData","newWrapKb","sessionTokenId","wrapKb","getRandomBytes","deviceRegister","deviceName","deviceType","deviceCallback","pushCallback","devicePublicKey","deviceAuthKey","pushPublicKey","pushAuthKey","deviceUpdate","deviceId","deviceDestroy","deviceList","sessions","sendUnblockCode","rejectUnblockCode","sendSms","phoneNumber","messageId","features","smsStatus","url","country","consumeSigninCode","recoveryEmails","recoveryEmailCreate","recoveryEmailDestroy","recoveryEmailSecondaryEmailEnabled","_required"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACxZA;ACAA,ADCA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/zBA,ADg0BA;AC/zfA,ADggBA;AC/ftvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnBA,ADoBA;ACnfile":"fxa-client.min.js","sourcesContent":["/**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"components/almond/almond\", function(){});\n\n","define('sjcl',[], function () {\"use strict\";  return sjcl; });\n","/*!\r\n * Copyright 2013 Robert Katić\r\n * Released under the MIT license\r\n * https://github.com/rkatic/p/blob/master/LICENSE\r\n *\r\n * High-priority-tasks code-portion based on https://github.com/kriskowal/asap\r\n * Long-Stack-Support code-portion based on https://github.com/kriskowal/q\r\n */\r\n;(function( factory ){\r\n\t// CommonJS\r\n\tif ( typeof module !== \"undefined\" && module && module.exports ) {\r\n\t\tmodule.exports = factory();\r\n\r\n\t// RequireJS\r\n\t} else if ( typeof define === \"function\" && define.amd ) {\r\n\t\tdefine( 'p',factory );\r\n\r\n\t// global\r\n\t} else {\r\n\t\tP = factory();\r\n\t}\r\n})(function() {\r\n\t\"use strict\";\r\n\r\n\tvar withStack = withStackThrowing,\r\n\t\tpStartingLine = captureLine(),\r\n\t\tpFileName,\r\n\t\tcurrentTrace = null;\r\n\r\n\tfunction withStackThrowing( error ) {\r\n\t\tif ( !error.stack ) {\r\n\t\t\ttry {\r\n\t\t\t\tthrow error;\r\n\t\t\t} catch ( e ) {}\r\n\t\t}\r\n\t\treturn error;\r\n\t}\r\n\r\n\tif ( new Error().stack ) {\r\n\t\twithStack = function( error ) {\r\n\t\t\treturn error;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction getTrace() {\r\n\t\tvar stack = withStack( new Error() ).stack;\r\n\t\tif ( !stack ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar stacks = [ filterStackString( stack, 1 ) ];\r\n\r\n\t\tif ( currentTrace ) {\r\n\t\t\tstacks = stacks.concat( currentTrace );\r\n\r\n\t\t\tif ( stacks.length === 128 ) {\r\n\t\t\t\tstacks.pop();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn stacks;\r\n\t}\r\n\r\n\tfunction getFileNameAndLineNumber( stackLine ) {\r\n\t\tvar m =\r\n\t\t\t/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec( stackLine ) ||\r\n\t\t\t/at ([^ ]+):(\\d+):(?:\\d+)$/.exec( stackLine ) ||\r\n\t\t\t/@(.+):(\\d+):(?:\\d+)$/.exec( stackLine );\r\n\r\n\t\treturn m ? { fileName: m[1], lineNumber: Number(m[2]) } : null;\r\n\t}\r\n\r\n\tfunction captureLine() {\r\n\t\tvar stack = withStack( new Error() ).stack;\r\n\t\tif ( !stack ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar lines = stack.split(\"\\n\");\r\n\t\tvar firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\r\n\t\tvar pos = getFileNameAndLineNumber( firstLine );\r\n\t\tif ( !pos ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tpFileName = pos.fileName;\r\n\t\treturn pos.lineNumber;\r\n\t}\r\n\r\n\tfunction filterStackString( stack, ignoreFirstLines ) {\r\n\t\tvar lines = stack.split(\"\\n\");\r\n\t\tvar goodLines = [];\r\n\r\n\t\tfor ( var i = ignoreFirstLines|0, l = lines.length; i < l; ++i ) {\r\n\t\t\tvar line = lines[i];\r\n\r\n\t\t\tif ( line && !isNodeFrame(line) && !isInternalFrame(line) ) {\r\n\t\t\t\tgoodLines.push( line );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn goodLines.join(\"\\n\");\r\n\t}\r\n\r\n\tfunction isNodeFrame( stackLine ) {\r\n\t\treturn stackLine.indexOf(\"(module.js:\") !== -1 ||\r\n\t\t\t   stackLine.indexOf(\"(node.js:\") !== -1;\r\n\t}\r\n\r\n\tfunction isInternalFrame( stackLine ) {\r\n\t\tvar pos = getFileNameAndLineNumber( stackLine );\r\n\t\treturn !!pos &&\r\n\t\t\tpos.fileName === pFileName &&\r\n\t\t\tpos.lineNumber >= pStartingLine &&\r\n\t\t\tpos.lineNumber <= pEndingLine;\r\n\t}\r\n\r\n\tvar STACK_JUMP_SEPARATOR = \"\\nFrom previous event:\\n\";\r\n\r\n\tfunction makeStackTraceLong( error ) {\r\n\t\tif ( error instanceof Error ) {\r\n\t\t\tvar stack = error.stack;\r\n\r\n\t\t\tif ( !stack ) {\r\n\t\t\t\tstack = withStack( error ).stack;\r\n\r\n\t\t\t} else if ( ~stack.indexOf(STACK_JUMP_SEPARATOR) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( stack ) {\r\n\t\t\t\terror.stack = [ filterStackString( stack, 0 ) ]\r\n\t\t\t\t\t.concat( currentTrace || [] )\r\n\t\t\t\t\t.join(STACK_JUMP_SEPARATOR);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//__________________________________________________________________________\r\n\r\n\tvar\r\n\t\tisNodeJS = ot(typeof process) && process != null &&\r\n\t\t\t({}).toString.call(process) === \"[object process]\",\r\n\r\n\t\thasSetImmediate = typeof setImmediate === \"function\",\r\n\r\n\t\tgMutationObserver =\r\n\t\t\tot(typeof MutationObserver) && MutationObserver ||\r\n\t\t\tot(typeof WebKitMutationObserver) && WebKitMutationObserver,\r\n\r\n\t\thead = new TaskNode(),\r\n\t\ttail = head,\r\n\t\tflushing = false,\r\n\t\tnFreeTaskNodes = 0,\r\n\r\n\t\trequestFlush =\r\n\t\t\tisNodeJS ? requestFlushForNodeJS :\r\n\t\t\tgMutationObserver ? makeRequestCallFromMutationObserver( flush ) :\r\n\t\t\tmakeRequestCallFromTimer( flush ),\r\n\r\n\t\tpendingErrors = [],\r\n\t\trequestErrorThrow = makeRequestCallFromTimer( throwFirstError ),\r\n\r\n\t\thandleError,\r\n\r\n\t\tdomain,\r\n\r\n\t\tcall = ot.call,\r\n\t\tapply = ot.apply;\r\n\r\n\ttail.next = head;\r\n\r\n\tfunction TaskNode() {\r\n\t\tthis.f = null;\r\n\t\tthis.a = null;\r\n\t\tthis.b = null;\r\n\t\tthis.next = null;\r\n\t}\r\n\r\n\tfunction ot( type ) {\r\n\t\treturn type === \"object\" || type === \"function\";\r\n\t}\r\n\r\n\tfunction throwFirstError() {\r\n\t\tif ( pendingErrors.length ) {\r\n\t\t\tthrow pendingErrors.shift();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction flush() {\r\n\t\twhile ( head !== tail ) {\r\n\t\t\tvar h = head = head.next;\r\n\r\n\t\t\tif ( nFreeTaskNodes >= 1024 ) {\r\n\t\t\t\ttail.next = tail.next.next;\r\n\t\t\t} else {\r\n\t\t\t\t++nFreeTaskNodes;\r\n\t\t\t}\r\n\r\n\t\t\tvar f = h.f;\r\n\t\t\tvar a = h.a;\r\n\t\t\tvar b = h.b;\r\n\t\t\th.f = null;\r\n\t\t\th.a = null;\r\n\t\t\th.b = null;\r\n\r\n\t\t\tf( a, b );\r\n\t\t}\r\n\r\n\t\tflushing = false;\r\n\t\tcurrentTrace = null;\r\n\t}\r\n\r\n\tfunction schedule( f, a, b ) {\r\n\t\tvar node = tail.next;\r\n\r\n\t\tif ( node === head ) {\r\n\t\t\ttail.next = node = new TaskNode();\r\n\t\t\tnode.next = head;\r\n\t\t} else {\r\n\t\t\t--nFreeTaskNodes;\r\n\t\t}\r\n\r\n\t\ttail = node;\r\n\r\n\t\tnode.f = f;\r\n\t\tnode.a = a;\r\n\t\tnode.b = b;\r\n\r\n\t\tif ( !flushing ) {\r\n\t\t\tflushing = true;\r\n\t\t\trequestFlush();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction requestFlushForNodeJS() {\r\n\t\tvar currentDomain = process.domain;\r\n\r\n\t\tif ( currentDomain ) {\r\n\t\t\tif ( !domain ) domain = (1,require)(\"domain\");\r\n\t\t\tdomain.active = process.domain = null;\r\n\t\t}\r\n\r\n\t\tif ( flushing && hasSetImmediate ) {\r\n\t\t\tsetImmediate( flush );\r\n\r\n\t\t} else {\r\n\t\t\tprocess.nextTick( flush );\r\n\t\t}\r\n\r\n\t\tif ( currentDomain ) {\r\n\t\t\tdomain.active = process.domain = currentDomain;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeRequestCallFromMutationObserver( callback ) {\r\n\t\tvar toggle = 1;\r\n\t\tvar node = document.createTextNode(\"\");\r\n\t\tvar observer = new gMutationObserver( callback );\r\n\t\tobserver.observe( node, {characterData: true} );\r\n\r\n\t\treturn function() {\r\n\t\t\ttoggle = -toggle;\r\n\t\t\tnode.data = toggle;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction makeRequestCallFromTimer( callback ) {\r\n\t\treturn function() {\r\n\t\t\tvar timeoutHandle = setTimeout( handleTimer, 0 );\r\n\t\t\tvar intervalHandle = setInterval( handleTimer, 50 );\r\n\r\n\t\t\tfunction handleTimer() {\r\n\t\t\t\tclearTimeout( timeoutHandle );\r\n\t\t\t\tclearInterval( intervalHandle );\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tif ( isNodeJS ) {\r\n\t\thandleError = function( e ) {\r\n\t\t\tcurrentTrace = null;\r\n\t\t\trequestFlush();\r\n\t\t\tthrow e;\r\n\t\t};\r\n\r\n\t} else {\r\n\t\thandleError = function( e ) {\r\n\t\t\tpendingErrors.push( e );\r\n\t\t\trequestErrorThrow();\r\n\t\t}\r\n\t}\r\n\r\n\t//__________________________________________________________________________\r\n\r\n\tvar FULFILLED = 1;\r\n\tvar REJECTED = 2;\r\n\r\n\tvar OP_CALL = -1;\r\n\tvar OP_THEN = -2;\r\n\tvar OP_MULTIPLE = -3;\r\n\tvar OP_END = -4;\r\n\r\n\tvar VOID = P(void 0);\r\n\r\n\tfunction DoneEb( e ) {\r\n\t\tif ( P.onerror ) {\r\n\t\t\t(1,P.onerror)( e );\r\n\r\n\t\t} else {\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction P( x ) {\r\n\t\treturn x instanceof Promise ?\r\n\t\t\tx :\r\n\t\t\tResolve( new Promise(), x );\r\n\t}\r\n\r\n\tP.longStackSupport = false;\r\n\r\n\tfunction Fulfill( p, value ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tp._state = FULFILLED;\r\n\t\tp._value = value;\r\n\t\tp._domain = null;\r\n\r\n\t\tHandleSettled( p );\r\n\t}\r\n\r\n\tfunction Reject( p, reason ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( currentTrace ) {\r\n\t\t\tmakeStackTraceLong( reason );\r\n\t\t}\r\n\r\n\t\tp._state = REJECTED;\r\n\t\tp._value = reason;\r\n\r\n\t\tif ( isNodeJS ) {\r\n\t\t\tp._domain = process.domain;\r\n\t\t}\r\n\r\n\t\tif ( p._op === OP_END ) {\r\n\t\t\thandleError( reason );\r\n\r\n\t\t} else {\r\n\t\t\tHandleSettled( p );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction Propagate( parent, p ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tp._state = parent._state;\r\n\t\tp._value = parent._value;\r\n\t\tp._domain = parent._domain;\r\n\r\n\t\tHandleSettled( p );\r\n\t}\r\n\r\n\tfunction Resolve( p, x ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tif ( x instanceof Promise ) {\r\n\t\t\tResolveWithPromise( p, x );\r\n\r\n\t\t} else {\r\n\t\t\tvar type = typeof x;\r\n\r\n\t\t\tif ( type === \"object\" && x !== null || type === \"function\" ) {\r\n\t\t\t\tResolveWithObject( p, x )\r\n\r\n\t\t\t} else {\r\n\t\t\t\tFulfill( p, x );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction ResolveWithPromise( p, x ) {\r\n\t\tif ( x === p ) {\r\n\t\t\tReject( p, new TypeError(\"You can't resolve a promise with itself\") );\r\n\r\n\t\t} else if ( x._state > 0 ) {\r\n\t\t\tPropagate( x, p );\r\n\r\n\t\t} else {\r\n\t\t\tOnSettled( x, OP_THEN, p );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ResolveWithObject( p, x ) {\r\n\t\tvar then = GetThen( p, x );\r\n\r\n\t\tif ( typeof then === \"function\" ) {\r\n\t\t\tTryResolver( resolverFor(p, false), then, x );\r\n\r\n\t\t} else {\r\n\t\t\tFulfill( p, x );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction GetThen( p, x ) {\r\n\t\ttry {\r\n\t\t\treturn x.then;\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\tReject( p, e );\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction TryResolver( d, resolver, x ) {\r\n\t\ttry {\r\n\t\t\tcall.call( resolver, x, d.resolve, d.reject );\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\td.reject( e );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction HandleSettled( p ) {\r\n\t\tif ( p._pending !== null ) {\r\n\t\t\tHandlePending( p, p._op, p._pending );\r\n\t\t\tp._pending = null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction HandlePending( p, op, pending ) {\r\n\t\tif ( op >= 0 ) {\r\n\t\t\tpending._cb( p, op );\r\n\r\n\t\t} else if ( op === OP_CALL ) {\r\n\t\t\tpending( p );\r\n\r\n\t\t} else if ( op === OP_THEN ) {\r\n\t\t\tschedule( Then, p, pending );\r\n\r\n\t\t} else {\r\n\t\t\tfor ( var i = 0, l = pending.length; i < l; i += 2 ) {\r\n\t\t\t\tHandlePending( p, pending[i], pending[i + 1] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction OnSettled( p, op, pending ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\tHandlePending( p, op, pending );\r\n\r\n\t\t} else if ( p._pending === null ) {\r\n\t\t\tp._pending = pending;\r\n\t\t\tp._op = op;\r\n\r\n\t\t} else if ( p._op === OP_MULTIPLE ) {\r\n\t\t\tp._pending.push( op, pending );\r\n\r\n\t\t} else {\r\n\t\t\tp._pending = [ p._op, p._pending, op, pending ];\r\n\t\t\tp._op = OP_MULTIPLE;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction Then( parent, p ) {\r\n\t\tvar cb = parent._state === FULFILLED ? p._cb : p._eb;\r\n\t\tp._cb = null;\r\n\t\tp._eb = null;\r\n\r\n\t\tif ( p._trace ) {\r\n\t\t\tcurrentTrace = p._trace;\r\n\t\t\tp._trace = null;\r\n\t\t}\r\n\r\n\t\tif ( cb === null ) {\r\n\t\t\tPropagate( parent, p );\r\n\r\n\t\t} else {\r\n\t\t\tHandleCallback( p, cb, parent._value, parent._domain || p._domain );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction HandleCallback( p, cb, value, domain ) {\r\n\t\tif ( domain ) {\r\n\t\t\tif ( domain._disposed ) return;\r\n\t\t\tdomain.enter();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvalue = cb( value );\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\tReject( p, e );\r\n\t\t\tp = null;\r\n\t\t}\r\n\r\n\t\tif ( p ) Resolve( p, value );\r\n\t\tif ( domain ) domain.exit();\r\n\t}\r\n\r\n\tfunction resolverFor( promise, nodelike ) {\r\n\t\tvar trace = P.longStackSupport ? getTrace() : null;\r\n\r\n\t\tfunction resolve( error, y ) {\r\n\t\t\tif ( promise ) {\r\n\t\t\t\tvar p = promise;\r\n\t\t\t\tpromise = null;\r\n\r\n\t\t\t\tif ( trace ) {\r\n\t\t\t\t\tif ( currentTrace ) {\r\n\t\t\t\t\t\ttrace = null;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrentTrace = trace;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( error ) {\r\n\t\t\t\t\tReject( p, nodelike ? error : y );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tResolve( p, y );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( trace ) {\r\n\t\t\t\t\tcurrentTrace = trace = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nodelike ? resolve : {\r\n\t\t\tpromise: promise,\r\n\r\n\t\t\tresolve: function( y ) {\r\n\t\t\t\tresolve( false, y );\r\n\t\t\t},\r\n\r\n\t\t\treject: function( reason ) {\r\n\t\t\t\tresolve( true, reason );\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tP.defer = defer;\r\n\tfunction defer() {\r\n\t\treturn resolverFor( new Promise(), false );\r\n\t}\r\n\r\n\tP.reject = reject;\r\n\tfunction reject( reason ) {\r\n\t\tvar promise = new Promise();\r\n\t\tReject( promise, reason );\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tfunction Promise() {\r\n\t\tthis._state = 0;\r\n\t\tthis._value = void 0;\r\n\t\tthis._domain = null;\r\n\t\tthis._cb = null;\r\n\t\tthis._eb = null;\r\n\t\tthis._op = 0;\r\n\t\tthis._pending = null;\r\n\t\tthis._trace = null;\r\n\t}\r\n\r\n\tPromise.prototype.then = function( onFulfilled, onRejected ) {\r\n\t\tvar promise = new Promise();\r\n\r\n\t\tpromise._cb = typeof onFulfilled === \"function\" ? onFulfilled : null;\r\n\t\tpromise._eb = typeof onRejected === \"function\" ? onRejected : null;\r\n\r\n\t\tif ( P.longStackSupport ) {\r\n\t\t\tpromise._trace = getTrace();\r\n\t\t}\r\n\r\n\t\tif ( isNodeJS ) {\r\n\t\t\tpromise._domain = process.domain;\r\n\t\t}\r\n\r\n\t\tif ( this._state > 0 ) {\r\n\t\t\tschedule( Then, this, promise );\r\n\r\n\t\t} else {\r\n\t\t\tOnSettled( this, OP_THEN, promise );\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tPromise.prototype.done = function( cb, eb ) {\r\n\t\tvar p = this;\r\n\r\n\t\tif ( cb || eb ) {\r\n\t\t\tp = p.then( cb, eb );\r\n\t\t}\r\n\r\n\t\tp.then( null, DoneEb )._op = OP_END;\r\n\t};\r\n\r\n\tPromise.prototype.fail = function( eb ) {\r\n\t\treturn this.then( null, eb );\r\n\t};\r\n\r\n\tPromise.prototype.fin = function( finback ) {\r\n\t\tvar self = this;\r\n\r\n\t\tfunction fb() {\r\n\t\t\treturn finback();\r\n\t\t}\r\n\r\n\t\treturn self.then( fb, fb ).then(function() {\r\n\t\t\treturn self;\r\n\t\t});\r\n\t};\r\n\r\n\tPromise.prototype.spread = function( cb, eb ) {\r\n\t\treturn this.then( all ).then(function( args ) {\r\n\t\t\treturn apply.call( cb, void 0, args );\r\n\t\t}, eb);\r\n\t};\r\n\r\n\tPromise.prototype.timeout = function( ms, msg ) {\r\n\t\tvar promise = new Promise();\r\n\r\n\t\tif ( this._state > 0 ) {\r\n\t\t\tPropagate( this, promise );\r\n\r\n\t\t} else {\r\n\t\t\tvar timedout = false;\r\n\t\t\tvar trace = P.longStackSupport ? getTrace() : null;\r\n\r\n\t\t\tvar timeoutId = setTimeout(function() {\r\n\t\t\t\ttimedout = true;\r\n\t\t\t\tcurrentTrace = trace;\r\n\t\t\t\tReject( promise, new Error(msg || \"Timed out after \" + ms + \" ms\") );\r\n\t\t\t\tcurrentTrace = null;\r\n\t\t\t}, ms);\r\n\r\n\t\t\tOnSettled(this, OP_CALL, function( p ) {\r\n\t\t\t\tif ( !timedout ) {\r\n\t\t\t\t\tschedule( Propagate, p, promise );\r\n\t\t\t\t\tclearTimeout( timeoutId );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tPromise.prototype.delay = function( ms ) {\r\n\t\tvar promise = new Promise();\r\n\r\n\t\tOnSettled(this, OP_CALL, function( p ) {\r\n\t\t\tif ( p._state === FULFILLED ) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tPropagate( p, promise );\r\n\t\t\t\t}, ms);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tschedule( Propagate, p, promise );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tPromise.prototype.all = function() {\r\n\t\treturn this.then( all );\r\n\t};\r\n\r\n\tPromise.prototype.allSettled = function() {\r\n\t\treturn this.then( allSettled );\r\n\t};\r\n\r\n\tPromise.prototype.inspect = function() {\r\n\t\tswitch ( this._state ) {\r\n\t\t\tcase FULFILLED: return { state: \"fulfilled\", value: this._value };\r\n\t\t\tcase REJECTED:  return { state: \"rejected\", reason: this._value };\r\n\t\t\tdefault:\t\treturn { state: \"pending\" };\r\n\t\t}\r\n\t};\r\n\r\n\tPromise.prototype.nodeify = function( nodeback ) {\r\n\t\tif ( nodeback ) {\r\n\t\t\tthis.done(function( value ) {\r\n\t\t\t\tnodeback( null, value );\r\n\t\t\t}, nodeback);\r\n\t\t\treturn void 0;\r\n\r\n\t\t} else {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t};\r\n\r\n\tfunction _allSettled_cb( p, i ) {\r\n\t\tthis._value[ i ] = p.inspect();\r\n\t\tif ( ++this._state === 0 ) {\r\n\t\t\tif ( this._pending === null ) {\r\n\t\t\t\tthis._state = FULFILLED;\r\n\t\t\t} else {\r\n\t\t\t\tschedule( Fulfill, this, this._value );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _all_cb( p, i ) {\r\n\t\tif ( this._state < 0 ) {\r\n\t\t\tif ( p._state === REJECTED ) {\r\n\t\t\t\tthis._state = 0;\r\n\t\t\t\tif ( this._pending === null ) {\r\n\t\t\t\t\tPropagate( p, this );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tschedule( Propagate, p, this );\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._value[ i ] = p._value;\r\n\t\t\t\tif ( ++this._state === 0 ) {\r\n\t\t\t\t\tif ( this._pending === null ) {\r\n\t\t\t\t\t\tthis._state = FULFILLED;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tschedule( Fulfill, this, this._value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar nextIsAllSettled = false;\r\n\r\n\tP.all = all;\r\n\tfunction all( input ) {\r\n\t\tvar promise = new Promise();\r\n\t\tpromise._cb = nextIsAllSettled ? _allSettled_cb : _all_cb;\r\n\t\tnextIsAllSettled = false;\r\n\r\n\t\tvar len = input.length|0;\r\n\r\n\t\tpromise._state = len ? -len : FULFILLED;\r\n\t\tpromise._value = new Array( len );\r\n\r\n\t\tfor ( var i = 0; i < len && promise._state < 0; ++i ) {\r\n\t\t\tOnSettled( P(input[i]), i, promise );\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tP.allSettled = allSettled;\r\n\tfunction allSettled( input ) {\r\n\t\tnextIsAllSettled = true;\r\n\t\treturn all( input );\r\n\t}\r\n\r\n\tP.spread = spread;\r\n\tfunction spread( values, cb, eb ) {\r\n\t\treturn all( values ).then(function( args ) {\r\n\t\t\treturn apply.call( cb, void 0, args );\r\n\t\t}, eb);\r\n\t}\r\n\r\n\tP.promised = promised;\r\n\tfunction promised( f ) {\r\n\t\tfunction onFulfilled( thisAndArgs ) {\r\n\t\t\treturn call.apply( f, thisAndArgs );\r\n\t\t}\r\n\r\n\t\treturn function() {\r\n\t\t\tvar len = arguments.length;\r\n\t\t\tvar thisAndArgs = new Array( len + 1 );\r\n\t\t\tthisAndArgs[0] = this;\r\n\t\t\tfor ( var i = 0; i < len; ++i ) {\r\n\t\t\t\tthisAndArgs[ i + 1 ] = arguments[ i ];\r\n\t\t\t}\r\n\t\t\treturn all( thisAndArgs ).then( onFulfilled );\r\n\t\t};\r\n\t}\r\n\r\n\tP.denodeify = denodeify;\r\n\tfunction denodeify( f ) {\r\n\t\treturn function() {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tvar i = arguments.length;\r\n\t\t\tvar args = new Array( i + 1 );\r\n\t\t\targs[i] = resolverFor( promise, true );\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\targs[i] = arguments[i];\r\n\t\t\t}\r\n\r\n\t\t\tTryApply( promise, f, this, args );\r\n\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction TryApply( p, f, that, args ) {\r\n\t\ttry {\r\n\t\t\tapply.call( f, that, args );\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\tReject( p, e );\r\n\t\t}\r\n\t}\r\n\r\n\tP.onerror = null;\r\n\r\n\tP.nextTick = function nextTick( task ) {\r\n\t\t// We don't use .done to avoid P.onerror.\r\n\t\tVOID.then(function() {\r\n\t\t\ttask.call();\r\n\t\t})._op = OP_END;\r\n\t};\r\n\r\n\tvar pEndingLine = captureLine();\r\n\r\n\treturn P;\r\n});\r\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawk',['sjcl'], function (sjcl) {\n  'use strict';\n\n  /*\n   HTTP Hawk Authentication Scheme\n   Copyright (c) 2012-2013, Eran Hammer <eran@hueniverse.com>\n   MIT Licensed\n   */\n\n\n  // Declare namespace\n\n  var hawk = {};\n\n  hawk.client = {\n\n    // Generate an Authorization header for a given request\n\n    /*\n     uri: 'http://example.com/resource?a=b'\n     method: HTTP verb (e.g. 'GET', 'POST')\n     options: {\n\n     // Required\n\n     credentials: {\n     id: 'dh37fgj492je',\n     key: 'aoijedoaijsdlaksjdl',\n     algorithm: 'sha256'                                 // 'sha1', 'sha256'\n     },\n\n     // Optional\n\n     ext: 'application-specific',                        // Application specific data sent via the ext attribute\n     timestamp: Date.now() / 1000,                       // A pre-calculated timestamp in seconds\n     nonce: '2334f34f',                                  // A pre-generated nonce\n     localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n     payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n     contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n     hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n     app: '24s23423f34dx',                               // Oz application id\n     dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n     }\n     */\n\n    header: function (uri, method, options) {\n      /*eslint complexity: [2, 21] */\n      var result = {\n        field: '',\n        artifacts: {}\n      };\n\n      // Validate inputs\n\n      if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !method || typeof method !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        result.err = 'Invalid argument type';\n        return result;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        result.err = 'Invalid credential object';\n        return result;\n      }\n\n      if (hawk.utils.baseIndexOf(hawk.crypto.algorithms, credentials.algorithm) === -1) {\n        result.err = 'Unknown algorithm';\n        return result;\n      }\n\n      // Parse URI\n\n      if (typeof uri === 'string') {\n        uri = hawk.utils.parseUri(uri);\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        method: method,\n        resource: uri.relative,\n        host: uri.hostname,\n        port: uri.port,\n        hash: options.hash,\n        ext: options.ext,\n        app: options.app,\n        dlg: options.dlg\n      };\n\n      result.artifacts = artifacts;\n\n      // Calculate payload hash\n\n      if (!artifacts.hash &&\n        options.hasOwnProperty('payload')) {\n\n        artifacts.hash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n      }\n\n      var mac = hawk.crypto.calculateMac('header', credentials, artifacts);\n\n      // Construct header\n\n      var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n      var header = 'Hawk id=\"' + credentials.id +\n        '\", ts=\"' + artifacts.ts +\n        '\", nonce=\"' + artifacts.nonce +\n        (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n        (hasExt ? '\", ext=\"' + hawk.utils.escapeHeaderAttribute(artifacts.ext) : '') +\n        '\", mac=\"' + mac + '\"';\n\n      if (artifacts.app) {\n        header += ', app=\"' + artifacts.app +\n          (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n      }\n\n      result.field = header;\n\n      return result;\n    },\n\n\n    // Validate server response\n\n    /*\n     request:    object created via 'new XMLHttpRequest()' after response received\n     artifacts:  object recieved from header().artifacts\n     options: {\n     payload:    optional payload received\n     required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n     }\n     */\n\n    authenticate: function (request, credentials, artifacts, options) {\n\n      options = options || {};\n\n      if (request.getResponseHeader('www-authenticate')) {\n\n        // Parse HTTP WWW-Authenticate header\n\n        var attrsAuth = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('www-authenticate'), ['ts', 'tsm', 'error']);\n        if (!attrsAuth) {\n          return false;\n        }\n\n        if (attrsAuth.ts) {\n          var tsm = hawk.crypto.calculateTsMac(attrsAuth.ts, credentials);\n          if (tsm !== attrsAuth.tsm) {\n            return false;\n          }\n\n          hawk.utils.setNtpOffset(attrsAuth.ts - Math.floor((new Date()).getTime() / 1000));     // Keep offset at 1 second precision\n        }\n      }\n\n      // Parse HTTP Server-Authorization header\n\n      if (!request.getResponseHeader('server-authorization') &&\n        !options.required) {\n\n        return true;\n      }\n\n      var attributes = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('server-authorization'), ['mac', 'ext', 'hash']);\n      if (!attributes) {\n        return false;\n      }\n\n      var modArtifacts = {\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        method: artifacts.method,\n        resource: artifacts.resource,\n        host: artifacts.host,\n        port: artifacts.port,\n        hash: attributes.hash,\n        ext: attributes.ext,\n        app: artifacts.app,\n        dlg: artifacts.dlg\n      };\n\n      var mac = hawk.crypto.calculateMac('response', credentials, modArtifacts);\n      if (mac !== attributes.mac) {\n        return false;\n      }\n\n      if (!options.hasOwnProperty('payload')) {\n        return true;\n      }\n\n      if (!attributes.hash) {\n        return false;\n      }\n\n      var calculatedHash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.getResponseHeader('content-type'));\n      return (calculatedHash === attributes.hash);\n    },\n\n    message: function (host, port, message, options) {\n\n      // Validate inputs\n\n      if (!host || typeof host !== 'string' ||\n        !port || typeof port !== 'number' ||\n        message === null || message === undefined || typeof message !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return null;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return null;\n      }\n\n      if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return null;\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        host: host,\n        port: port,\n        hash: hawk.crypto.calculatePayloadHash(message, credentials.algorithm)\n      };\n\n      // Construct authorization\n\n      var result = {\n        id: credentials.id,\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        hash: artifacts.hash,\n        mac: hawk.crypto.calculateMac('message', credentials, artifacts)\n      };\n\n      return result;\n    },\n\n    authenticateTimestamp: function (message, credentials, updateClock) {           // updateClock defaults to true\n\n      var tsm = hawk.crypto.calculateTsMac(message.ts, credentials);\n      if (tsm !== message.tsm) {\n        return false;\n      }\n\n      if (updateClock !== false) {\n        hawk.utils.setNtpOffset(message.ts - Math.floor((new Date()).getTime() / 1000));    // Keep offset at 1 second precision\n      }\n\n      return true;\n    }\n  };\n\n\n  hawk.crypto = {\n\n    headerVersion: '1',\n\n    algorithms: ['sha1', 'sha256'],\n\n    calculateMac: function (type, credentials, options) {\n      var normalized = hawk.crypto.generateNormalizedString(type, options);\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update(normalized);\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    },\n\n    generateNormalizedString: function (type, options) {\n\n      var normalized = 'hawk.' + hawk.crypto.headerVersion + '.' + type + '\\n' +\n        options.ts + '\\n' +\n        options.nonce + '\\n' +\n        (options.method || '').toUpperCase() + '\\n' +\n        (options.resource || '') + '\\n' +\n        options.host.toLowerCase() + '\\n' +\n        options.port + '\\n' +\n        (options.hash || '') + '\\n';\n\n      if (options.ext) {\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n      }\n\n      normalized += '\\n';\n\n      if (options.app) {\n        normalized += options.app + '\\n' +\n          (options.dlg || '') + '\\n';\n      }\n\n      return normalized;\n    },\n\n    calculatePayloadHash: function (payload, algorithm, contentType) {\n      var hash = new sjcl.hash.sha256();\n      hash.update('hawk.' + hawk.crypto.headerVersion + '.payload\\n')\n        .update(hawk.utils.parseContentType(contentType) + '\\n')\n        .update(payload || '')\n        .update('\\n');\n\n      return sjcl.codec.base64.fromBits(hash.finalize());\n    },\n\n    calculateTsMac: function (ts, credentials) {\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update('hawk.' + hawk.crypto.headerVersion + '.ts\\n' + ts + '\\n');\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    }\n  };\n\n\n  hawk.utils = {\n\n    storage: {                                      // localStorage compatible interface\n      _cache: {},\n      setItem: function (key, value) {\n\n        hawk.utils.storage._cache[key] = value;\n      },\n      getItem: function (key) {\n\n        return hawk.utils.storage._cache[key];\n      }\n    },\n\n    setStorage: function (storage) {\n\n      var ntpOffset = hawk.utils.getNtpOffset() || 0;\n      hawk.utils.storage = storage;\n      hawk.utils.setNtpOffset(ntpOffset);\n    },\n\n    setNtpOffset: function (offset) {\n\n      try {\n        hawk.utils.storage.setItem('hawk_ntp_offset', offset);\n      }\n      catch (err) {\n        console.error('[hawk] could not write to storage.');\n        console.error(err);\n      }\n    },\n\n    getNtpOffset: function () {\n\n      return parseInt(hawk.utils.storage.getItem('hawk_ntp_offset') || '0', 10);\n    },\n\n    now: function () {\n\n      return (new Date()).getTime() + hawk.utils.getNtpOffset();\n    },\n\n    escapeHeaderAttribute: function (attribute) {\n\n      return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');\n    },\n\n    parseContentType: function (header) {\n\n      if (!header) {\n        return '';\n      }\n\n      return header.split(';')[0].replace(/^\\s+|\\s+$/g, '').toLowerCase();\n    },\n\n    parseAuthorizationHeader: function (header, keys) {\n\n      if (!header) {\n        return null;\n      }\n\n      var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/);       // Header: scheme[ something]\n      if (!headerParts) {\n        return null;\n      }\n\n      var scheme = headerParts[1];\n      if (scheme.toLowerCase() !== 'hawk') {\n        return null;\n      }\n\n      var attributesString = headerParts[2];\n      if (!attributesString) {\n        return null;\n      }\n\n      var attributes = {};\n      var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n\n        // Check valid attribute names\n\n        if (keys.indexOf($1) === -1) {\n          return;\n        }\n\n        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n        if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n          return;\n        }\n\n        // Check for duplicates\n\n        if (attributes.hasOwnProperty($1)) {\n          return;\n        }\n\n        attributes[$1] = $2;\n        return '';\n      });\n\n      if (verify !== '') {\n        return null;\n      }\n\n      return attributes;\n    },\n\n    randomString: function (size) {\n\n      var randomSource = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n      var len = randomSource.length;\n\n      var result = [];\n      for (var i = 0; i < size; ++i) {\n        result[i] = randomSource[Math.floor(Math.random() * len)];\n      }\n\n      return result.join('');\n    },\n\n    baseIndexOf: function(array, value, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n      while (++index < length) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    },\n\n    parseUri: function (input) {\n\n      // Based on: parseURI 1.2.2\n      // http://blog.stevenlevithan.com/archives/parseuri\n      // (c) Steven Levithan <stevenlevithan.com>\n      // MIT License\n\n      var keys = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'hostname', 'port', 'resource', 'relative', 'pathname', 'directory', 'file', 'query', 'fragment'];\n\n      var uriRegex = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?)(?:#(.*))?)/;\n      var uriByNumber = uriRegex.exec(input);\n      var uri = {};\n\n      var i = 15;\n      while (i--) {\n        uri[keys[i]] = uriByNumber[i] || '';\n      }\n\n      if (uri.port === null ||\n        uri.port === '') {\n\n        uri.port = (uri.protocol.toLowerCase() === 'http' ? '80' : (uri.protocol.toLowerCase() === 'https' ? '443' : ''));\n      }\n\n      return uri;\n    }\n  };\n\n\n  return hawk;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/errors',[], function () {\n  return {\n    INVALID_TIMESTAMP: 111,\n    INCORRECT_EMAIL_CASE: 120\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/request',['./hawk', 'p', './errors'], function (hawk, P, ERRORS) {\n  'use strict';\n  /* global XMLHttpRequest */\n\n  /**\n   * @class Request\n   * @constructor\n   * @param {String} baseUri Base URI\n   * @param {Object} xhr XMLHttpRequest constructor\n   * @param {Object} [options={}] Options\n   *   @param {Number} [options.localtimeOffsetMsec]\n   *   Local time offset with the remote auth server's clock\n   */\n  function Request (baseUri, xhr, options) {\n    if (!options) {\n      options = {};\n    }\n    this.baseUri = baseUri;\n    this._localtimeOffsetMsec = options.localtimeOffsetMsec;\n    this.xhr = xhr || XMLHttpRequest;\n    this.timeout = options.timeout || 30 * 1000;\n  }\n\n  /**\n   * @method send\n   * @param {String} path Request path\n   * @param {String} method HTTP Method\n   * @param {Object} credentials HAWK Headers\n   * @param {Object} jsonPayload JSON Payload\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.retrying]\n   *   Flag indicating if the request is a retry\n   *   @param {Array} [options.headers]\n   *   A set of extra headers to add to the request\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  Request.prototype.send = function request(path, method, credentials, jsonPayload, options) {\n    /*eslint complexity: [2, 8] */\n    var deferred = P.defer();\n    var xhr = new this.xhr();\n    var uri = this.baseUri + path;\n    var payload = null;\n    var self = this;\n    options = options || {};\n\n    if (jsonPayload) {\n      payload = JSON.stringify(jsonPayload);\n    }\n\n    try {\n      xhr.open(method, uri);\n    } catch (e) {\n      return P.reject({ error: 'Unknown error', message: e.toString(), errno: 999 });\n    }\n\n    xhr.timeout = this.timeout;\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        var result = xhr.responseText;\n        try {\n          result = JSON.parse(xhr.responseText);\n        } catch (e) { }\n\n        if (result.errno) {\n          // Try to recover from a timeskew error and not already tried\n          if (result.errno === ERRORS.INVALID_TIMESTAMP && !options.retrying) {\n            var serverTime = result.serverTime;\n            self._localtimeOffsetMsec = (serverTime * 1000) - new Date().getTime();\n\n            // add to options that the request is retrying\n            options.retrying = true;\n\n            return self.send(path, method, credentials, jsonPayload, options)\n              .then(deferred.resolve, deferred.reject);\n\n          } else {\n            return deferred.reject(result);\n          }\n        }\n\n        if (typeof xhr.status === 'undefined' || xhr.status !== 200) {\n          if (result.length === 0) {\n            return deferred.reject({ error: 'Timeout error', errno: 999 });\n          } else {\n            return deferred.reject({ error: 'Unknown error', message: result, errno: 999, code: xhr.status });\n          }\n        }\n\n        deferred.resolve(result);\n      }\n    };\n\n    // calculate Hawk header if credentials are supplied\n    if (credentials) {\n      var hawkHeader = hawk.client.header(uri, method, {\n                          credentials: credentials,\n                          payload: payload,\n                          contentType: 'application/json',\n                          localtimeOffsetMsec: this._localtimeOffsetMsec || 0\n                        });\n      xhr.setRequestHeader('authorization', hawkHeader.field);\n    }\n\n    xhr.setRequestHeader('Content-Type', 'application/json');\n\n    if (options && options.headers) {\n      // set extra headers for this request\n      for (var header in options.headers) {\n        xhr.setRequestHeader(header, options.headers[header]);\n      }\n    }\n\n    xhr.send(payload);\n\n    return deferred.promise;\n  };\n\n  return Request;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hkdf',['sjcl', 'p'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * hkdf - The HMAC-based Key Derivation Function\n   * based on https://github.com/mozilla/node-hkdf\n   *\n   * @class hkdf\n   * @param {bitArray} ikm Initial keying material\n   * @param {bitArray} info Key derivation data\n   * @param {bitArray} salt Salt\n   * @param {integer} length Length of the derived key in bytes\n   * @return promise object- It will resolve with `output` data\n   */\n  function hkdf(ikm, info, salt, length) {\n\n    var mac = new sjcl.misc.hmac(salt, sjcl.hash.sha256);\n    mac.update(ikm);\n\n    // compute the PRK\n    var prk = mac.digest();\n\n    // hash length is 32 because only sjcl.hash.sha256 is used at this moment\n    var hashLength = 32;\n    var num_blocks = Math.ceil(length / hashLength);\n    var prev = sjcl.codec.hex.toBits('');\n    var output = '';\n\n    for (var i = 0; i < num_blocks; i++) {\n      var hmac = new sjcl.misc.hmac(prk, sjcl.hash.sha256);\n\n      var input = sjcl.bitArray.concat(\n        sjcl.bitArray.concat(prev, info),\n        sjcl.codec.utf8String.toBits((String.fromCharCode(i + 1)))\n      );\n\n      hmac.update(input);\n\n      prev = hmac.digest();\n      output += sjcl.codec.hex.fromBits(prev);\n    }\n\n    var truncated = sjcl.bitArray.clamp(sjcl.codec.hex.toBits(output), length * 8);\n\n    return P(truncated);\n  }\n\n  return hkdf;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/pbkdf2',['sjcl', 'p'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * @class pbkdf2\n   * @constructor\n   */\n  var pbkdf2 = {\n    /**\n     * @method derive\n     * @param  {bitArray} input The password hex buffer.\n     * @param  {bitArray} salt The salt string buffer.\n     * @return {int} iterations the derived key bit array.\n     */\n    derive: function(input, salt, iterations, len) {\n      var result = sjcl.misc.pbkdf2(input, salt, iterations, len, sjcl.misc.hmac);\n      return P(result);\n    }\n  };\n\n  return pbkdf2;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/credentials',['./request', 'sjcl', 'p', './hkdf', './pbkdf2'], function (Request, sjcl, P, hkdf, pbkdf2) {\n  'use strict';\n\n  // Key wrapping and stretching configuration.\n  var NAMESPACE = 'identity.mozilla.com/picl/v1/';\n  var PBKDF2_ROUNDS = 1000;\n  var STRETCHED_PASS_LENGTH_BYTES = 32 * 8;\n\n  var HKDF_SALT = sjcl.codec.hex.toBits('00');\n  var HKDF_LENGTH = 32;\n\n  /**\n   * Key Wrapping with a name\n   *\n   * @method kw\n   * @static\n   * @param {String} name The name of the salt\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kw(name) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name);\n  }\n\n  /**\n   * Key Wrapping with a name and an email\n   *\n   * @method kwe\n   * @static\n   * @param {String} name The name of the salt\n   * @param {String} email The email of the user.\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kwe(name, email) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name + ':' + email);\n  }\n\n  /**\n   * @class credentials\n   * @constructor\n   */\n  return {\n    /**\n     * Setup credentials\n     *\n     * @method setup\n     * @param {String} emailInput\n     * @param {String} passwordInput\n     * @return {Promise} A promise that will be fulfilled with `result` of generated credentials\n     */\n    setup: function (emailInput, passwordInput) {\n      var result = {};\n      var email = kwe('quickStretch', emailInput);\n      var password = sjcl.codec.utf8String.toBits(passwordInput);\n\n      result.emailUTF8 = emailInput;\n      result.passwordUTF8 = passwordInput;\n\n      return pbkdf2.derive(password, email, PBKDF2_ROUNDS, STRETCHED_PASS_LENGTH_BYTES)\n        .then(\n        function (quickStretchedPW) {\n          result.quickStretchedPW = quickStretchedPW;\n\n          return hkdf(quickStretchedPW, kw('authPW'), HKDF_SALT, HKDF_LENGTH)\n            .then(\n            function (authPW) {\n              result.authPW = authPW;\n\n              return hkdf(quickStretchedPW, kw('unwrapBkey'), HKDF_SALT, HKDF_LENGTH);\n            }\n          );\n        }\n      )\n        .then(\n        function (unwrapBKey) {\n          result.unwrapBKey = unwrapBKey;\n          return result;\n        }\n      );\n    },\n    /**\n     * Wrap\n     *\n     * @method wrap\n     * @param {bitArray} bitArray1\n     * @param {bitArray} bitArray2\n     * @return {bitArray} wrap result of the two bitArrays\n     */\n    xor: function (bitArray1, bitArray2) {\n      var result = [];\n\n      for (var i = 0; i < bitArray1.length; i++) {\n        result[i] = bitArray1[i] ^ bitArray2[i];\n      }\n\n      return result;\n    },\n    /**\n     * Unbundle the WrapKB\n     * @param {String} key Bundle Key in hex\n     * @param {String} bundle Key bundle in hex\n     * @returns {*}\n     */\n    unbundleKeyFetchResponse: function (key, bundle) {\n      var self = this;\n      var bitBundle = sjcl.codec.hex.toBits(bundle);\n\n      return this.deriveBundleKeys(key, 'account/keys')\n        .then(\n          function (keys) {\n            var ciphertext = sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64);\n            var expectedHmac = sjcl.bitArray.bitSlice(bitBundle, 8 * -32);\n            var hmac = new sjcl.misc.hmac(keys.hmacKey, sjcl.hash.sha256);\n            hmac.update(ciphertext);\n\n            if (!sjcl.bitArray.equal(hmac.digest(), expectedHmac)) {\n              throw new Error('Bad HMac');\n            }\n\n            var keyAWrapB = self.xor(sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64), keys.xorKey);\n\n            return {\n              kA: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 0, 8 * 32)),\n              wrapKB: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 8 * 32))\n            };\n          }\n        );\n    },\n    /**\n     * Derive the HMAC and XOR keys required to encrypt a given size of payload.\n     * @param {String} key Hex Bundle Key\n     * @param {String} keyInfo Bundle Key Info\n     * @returns {Object} hmacKey, xorKey\n     */\n    deriveBundleKeys: function(key, keyInfo) {\n      var bitKeyInfo = kw(keyInfo);\n      var salt = sjcl.codec.hex.toBits('');\n      key = sjcl.codec.hex.toBits(key);\n\n      return hkdf(key, bitKeyInfo, salt, 3 * 32)\n        .then(\n          function (keyMaterial) {\n\n            return {\n              hmacKey: sjcl.bitArray.bitSlice(keyMaterial, 0, 8 * 32),\n              xorKey: sjcl.bitArray.bitSlice(keyMaterial, 8 * 32)\n            };\n          }\n        );\n    }\n  };\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawkCredentials',['sjcl', './hkdf'], function (sjcl, hkdf) {\n  'use strict';\n\n  var PREFIX_NAME = 'identity.mozilla.com/picl/v1/';\n  var bitSlice = sjcl.bitArray.bitSlice;\n  var salt = sjcl.codec.hex.toBits('');\n\n  /**\n   * @class hawkCredentials\n   * @method deriveHawkCredentials\n   * @param {String} tokenHex\n   * @param {String} context\n   * @param {int} size\n   * @returns {Promise}\n   */\n  function deriveHawkCredentials(tokenHex, context, size) {\n    var token = sjcl.codec.hex.toBits(tokenHex);\n    var info = sjcl.codec.utf8String.toBits(PREFIX_NAME + context);\n\n    return hkdf(token, info, salt, size || 3 * 32)\n      .then(function(out) {\n        var authKey = bitSlice(out, 8 * 32, 8 * 64);\n        var bundleKey = bitSlice(out, 8 * 64);\n\n        return {\n          algorithm: 'sha256',\n          id: sjcl.codec.hex.fromBits(bitSlice(out, 0, 8 * 32)),\n          key: authKey,\n          bundleKey: bundleKey\n        };\n      });\n  }\n\n  return deriveHawkCredentials;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// This module does the handling for the metrics context\n// activity event metadata.\n\ndefine('client/lib/metricsContext',[], function () {\n  'use strict';\n\n  return {\n    marshall: function (data) {\n      return {\n        flowId: data.flowId,\n        flowBeginTime: data.flowBeginTime\n      };\n    }\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/FxAccountClient',[\n  'sjcl',\n  'p',\n  './lib/credentials',\n  './lib/errors',\n  './lib/hawkCredentials',\n  './lib/metricsContext',\n  './lib/request',\n], function (sjcl, P, credentials, ERRORS, hawkCredentials, metricsContext, Request) {\n  'use strict';\n\n  var VERSION = 'v1';\n  var uriVersionRegExp = new RegExp('/' + VERSION + '$');\n  var HKDF_SIZE = 2 * 32;\n\n  function isUndefined(val) {\n    return typeof val === 'undefined';\n  }\n\n  function isNull(val) {\n    return val === null;\n  }\n\n  function isEmptyObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]' && ! Object.keys(val).length;\n  }\n\n  function isEmptyString(val) {\n    return val === '';\n  }\n\n  function required(val, name) {\n    if (isUndefined(val) ||\n        isNull(val) ||\n        isEmptyObject(val) ||\n        isEmptyString(val)) {\n      throw new Error('Missing ' + name);\n    }\n  }\n\n  /**\n   * @class FxAccountClient\n   * @constructor\n   * @param {String} uri Auth Server URI\n   * @param {Object} config Configuration\n   */\n  function FxAccountClient(uri, config) {\n    if (! uri && ! config) {\n      throw new Error('Firefox Accounts auth server endpoint or configuration object required.');\n    }\n\n    if (typeof uri !== 'string') {\n      config = uri || {};\n      uri = config.uri;\n    }\n\n    if (typeof config === 'undefined') {\n      config = {};\n    }\n\n    if (! uri) {\n      throw new Error('FxA auth server uri not set.');\n    }\n\n    if (!uriVersionRegExp.test(uri)) {\n      uri = uri + '/' + VERSION;\n    }\n\n    this.request = new Request(uri, config.xhr, { localtimeOffsetMsec: config.localtimeOffsetMsec });\n  }\n\n  FxAccountClient.VERSION = VERSION;\n\n  /**\n   * @method signUp\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.preVerified]\n   *   set email to be verified if possible\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signUp = function (email, password, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          /*eslint complexity: [2, 13] */\n          var endpoint = '/account/create';\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n          var requestOpts = {};\n\n          if (options) {\n            if (options.service) {\n              data.service = options.service;\n            }\n\n            if (options.redirectTo) {\n              data.redirectTo = options.redirectTo;\n            }\n\n            // preVerified is used for unit/functional testing\n            if (options.preVerified) {\n              data.preVerified = options.preVerified;\n            }\n\n            if (options.resume) {\n              data.resume = options.resume;\n            }\n\n            if (options.keys) {\n              endpoint += '?keys=true';\n            }\n\n            if (options.lang) {\n              requestOpts.headers = {\n                'Accept-Language': options.lang\n              };\n            }\n\n            if (options.metricsContext) {\n              data.metricsContext = metricsContext.marshall(options.metricsContext);\n            }\n          }\n\n          return self.request.send(endpoint, 'POST', null, data, requestOpts)\n            .then(\n              function(accountData) {\n                if (options && options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method signIn\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reason]\n   *   Reason for sign in. Can be one of: `signin`, `password_check`,\n   *   `password_change`, `password_reset`\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *   @param {String} [options.unblockCode]\n   *   Login unblock code.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signIn = function (email, password, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          var endpoint = '/account/login';\n\n          if (options.keys) {\n            endpoint += '?keys=true';\n          }\n\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n\n          if (options.reason) {\n            data.reason = options.reason;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.unblockCode) {\n            data.unblockCode = options.unblockCode;\n          }\n\n          return self.request.send(endpoint, 'POST', null, data)\n            .then(\n              function(accountData) {\n                if (options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              },\n              function(error) {\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n\n                  return self.signIn(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method verifyCode\n   * @param {String} uid Account ID\n   * @param {String} code Verification code\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reminder]\n   *   Reminder that was used to verify the account\n   *   @param {String} [options.type]\n   *   Type of code being verified, only supports `secondary` otherwise will verify account/sign-in\n   *   @param {Boolean} [options.marketingOptIn]\n   *   If `true`, notifies marketing of opt-in intent.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.verifyCode = function(uid, code, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(uid, 'uid');\n        required(code, 'verify code');\n\n        var data = {\n          uid: uid,\n          code: code\n        };\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.reminder) {\n            data.reminder = options.reminder;\n          }\n\n          if (options.type) {\n            data.type = options.type;\n          }\n\n          if (options.marketingOptIn) {\n            data.marketingOptIn = true;\n          }\n        }\n\n        return self.request.send('/recovery_email/verify_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * @method recoveryEmailStatus\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailStatus = function(sessionToken) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/recovery_email/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   *\n   * @method recoveryEmailResendCode\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.email]\n   *   Code will be resent to this email, only used for secondary email codes\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailResendCode = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    var requestOpts = {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        if (options) {\n          if (options.email) {\n            data.email = options.email;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n        }\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/recovery_email/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Used to ask the server to send a recovery code.\n   * The API returns passwordForgotToken to the client.\n   *\n   * @method passwordForgotSendCode\n   * @param {String} email\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotSendCode = function(email, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return self.request.send('/password/forgot/send_code', 'POST', null, data, requestOpts);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotResendCode\n   * @param {String} email\n   * @param {String} passwordForgotToken\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotResendCode = function(email, passwordForgotToken, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/password/forgot/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Submits the verification token to the server.\n   * The API returns accountResetToken to the client.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotVerifyCode\n   * @param {String} code\n   * @param {String} passwordForgotToken\n   * @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotVerifyCode = function(code, passwordForgotToken, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(code, 'reset code');\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          code: code\n        };\n\n        if (options && options.metricsContext) {\n          data.metricsContext = metricsContext.marshall(options.metricsContext);\n        }\n\n        return self.request.send('/password/forgot/verify_code', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Returns the status for the passwordForgotToken.\n   * If the request returns a success response, the token has not yet been consumed.\n\n   * @method passwordForgotStatus\n   * @param {String} passwordForgotToken\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotStatus = function(passwordForgotToken) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/password/forgot/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * The API returns reset result to the client.\n   * HAWK-authenticated with accountResetToken\n   *\n   * @method accountReset\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {String} accountResetToken\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, a new `keyFetchToken` is provisioned. `options.sessionToken`\n   *   is required if `options.keys` is true.\n   *   @param {Boolean} [options.sessionToken]\n   *   If `true`, a new `sessionToken` is provisioned.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountReset = function(email, newPassword, accountResetToken, options) {\n    var self = this;\n    var data = {};\n    var unwrapBKey;\n\n    options = options || {};\n\n    if (options.sessionToken) {\n      data.sessionToken = options.sessionToken;\n    }\n\n    if (options.metricsContext) {\n      data.metricsContext = metricsContext.marshall(options.metricsContext);\n    }\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(newPassword, 'new password');\n        required(accountResetToken, 'accountResetToken');\n\n        if (options.keys) {\n          required(options.sessionToken, 'sessionToken');\n        }\n\n        return credentials.setup(email, newPassword);\n      })\n      .then(\n        function (result) {\n          if (options.keys) {\n            unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n          }\n\n          data.authPW = sjcl.codec.hex.fromBits(result.authPW);\n\n          return hawkCredentials(accountResetToken, 'accountResetToken',  HKDF_SIZE);\n        }\n      ).then(\n        function (creds) {\n          var queryParams = '';\n          if (options.keys) {\n            queryParams = '?keys=true';\n          }\n\n          var endpoint = '/account/reset' + queryParams;\n          return self.request.send(endpoint, 'POST', creds, data)\n            .then(\n              function(accountData) {\n                if (options.keys && accountData.keyFetchToken) {\n                  accountData.unwrapBKey = unwrapBKey;\n                }\n\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Get the base16 bundle of encrypted kA|wrapKb.\n   *\n   * @method accountKeys\n   * @param {String} keyFetchToken\n   * @param {String} oldUnwrapBKey\n   * @return {Promise} A promise that will be fulfilled with JSON of {kA, kB}  of the key bundle\n   */\n  FxAccountClient.prototype.accountKeys = function(keyFetchToken, oldUnwrapBKey) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(keyFetchToken, 'keyFetchToken');\n        required(oldUnwrapBKey, 'oldUnwrapBKey');\n\n        return hawkCredentials(keyFetchToken, 'keyFetchToken',  3 * 32);\n      })\n      .then(function(creds) {\n        var bundleKey = sjcl.codec.hex.fromBits(creds.bundleKey);\n\n        return self.request.send('/account/keys', 'GET', creds)\n          .then(\n            function(payload) {\n\n              return credentials.unbundleKeyFetchResponse(bundleKey, payload.bundle);\n            });\n      })\n      .then(function(keys) {\n        return {\n          kB: sjcl.codec.hex.fromBits(\n            credentials.xor(\n              sjcl.codec.hex.toBits(keys.wrapKB),\n              sjcl.codec.hex.toBits(oldUnwrapBKey)\n            )\n          ),\n          kA: keys.kA\n        };\n      });\n  };\n\n  /**\n   * This deletes the account completely. All stored data is erased.\n   *\n   * @method accountDestroy\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountDestroy = function(email, password, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          return self.request.send('/account/destroy', 'POST', null, data)\n            .then(\n              function(response) {\n                return response;\n              },\n              function(error) {\n                // if incorrect email case error\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n\n                  return self.accountDestroy(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Gets the status of an account by uid.\n   *\n   * @method accountStatus\n   * @param {String} uid User account id\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatus = function(uid) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(uid, 'uid');\n\n        return self.request.send('/account/status?uid=' + uid, 'GET');\n      });\n  };\n\n  /**\n   * Gets the status of an account by email.\n   *\n   * @method accountStatusByEmail\n   * @param {String} email User account email\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatusByEmail = function(email) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n\n        return self.request.send('/account/status', 'POST', null, {email: email});\n      });\n  };\n\n  /**\n   * Destroys this session, by invalidating the sessionToken.\n   *\n   * @method sessionDestroy\n   * @param {String} sessionToken User session token\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.customSessionToken] Override which session token to destroy for this same user\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionDestroy = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    options = options || {};\n\n    if (options.customSessionToken) {\n      data.customSessionToken = options.customSessionToken;\n    }\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/session/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Responds successfully if the session status is valid, requires the sessionToken.\n   *\n   * @method sessionStatus\n   * @param {String} sessionToken User session token\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionStatus = function(sessionToken) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/session/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Sign a BrowserID public key\n   *\n   * @method certificateSign\n   * @param {String} sessionToken User session token\n   * @param {Object} publicKey The key to sign\n   * @param {int} duration Time interval from now when the certificate will expire in milliseconds\n   * @param {Object} [options={}] Options\n   *   @param {String} [service=''] The requesting service, sent via the query string\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.certificateSign = function(sessionToken, publicKey, duration, options) {\n    var self = this;\n    var data = {\n      publicKey: publicKey,\n      duration: duration\n    };\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(publicKey, 'publicKey');\n        required(duration, 'duration');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        options = options || {};\n\n        var queryString = '';\n        if (options.service) {\n          queryString = '?service=' + encodeURIComponent(options.service);\n        }\n\n        return self.request.send('/certificate/sign' + queryString, 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Change the password from one known value to another.\n   *\n   * @method passwordChange\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {String} newPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get a new keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordChange = function(email, oldPassword, newPassword, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(oldPassword, 'old password');\n        required(newPassword, 'new password');\n\n        return self._passwordChangeStart(email, oldPassword);\n      })\n      .then(function (credentials) {\n\n        var oldCreds = credentials;\n\n        return self._passwordChangeKeys(oldCreds)\n          .then(function (keys) {\n\n            return self._passwordChangeFinish(email, newPassword, oldCreds, keys, options);\n          });\n      });\n\n  };\n\n  /**\n   * First step to change the password.\n   *\n   * @method passwordChangeStart\n   * @private\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText` and `oldUnwrapBKey`\n   */\n  FxAccountClient.prototype._passwordChangeStart = function(email, oldPassword, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(oldPassword, 'old password');\n\n        return credentials.setup(email, oldPassword);\n      })\n      .then(function (oldCreds) {\n        var data = {\n          email: oldCreds.emailUTF8,\n          oldAuthPW: sjcl.codec.hex.fromBits(oldCreds.authPW)\n        };\n\n        return self.request.send('/password/change/start', 'POST', null, data)\n          .then(\n            function(passwordData) {\n              passwordData.oldUnwrapBKey = sjcl.codec.hex.fromBits(oldCreds.unwrapBKey);\n              return passwordData;\n            },\n            function(error) {\n              // if incorrect email case error\n              if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                options.skipCaseError = true;\n\n                return self._passwordChangeStart(error.email, oldPassword, options);\n              } else {\n                throw error;\n              }\n            }\n          );\n      });\n  };\n\n  function checkCreds(creds) {\n    required(creds, 'credentials');\n    required(creds.oldUnwrapBKey, 'credentials.oldUnwrapBKey');\n    required(creds.keyFetchToken, 'credentials.keyFetchToken');\n    required(creds.passwordChangeToken, 'credentials.passwordChangeToken');\n  }\n\n  /**\n   * Second step to change the password.\n   *\n   * @method _passwordChangeKeys\n   * @private\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeKeys = function(oldCreds) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        checkCreds(oldCreds);\n      })\n      .then(function () {\n        return self.accountKeys(oldCreds.keyFetchToken, oldCreds.oldUnwrapBKey);\n      });\n  };\n\n  /**\n   * Third step to change the password.\n   *\n   * @method _passwordChangeFinish\n   * @private\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @param {Object} keys This object should contain the unbundled keys\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeFinish = function(email, newPassword, oldCreds, keys, options) {\n    options = options || {};\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(newPassword, 'new password');\n        checkCreds(oldCreds);\n        required(keys, 'keys');\n        required(keys.kB, 'keys.kB');\n\n        var defers = [];\n        defers.push(credentials.setup(email, newPassword));\n        defers.push(hawkCredentials(oldCreds.passwordChangeToken, 'passwordChangeToken',  HKDF_SIZE));\n\n        if (options.sessionToken) {\n          // Unbundle session data to get session id\n          defers.push(hawkCredentials(options.sessionToken, 'sessionToken',  HKDF_SIZE));\n        }\n\n        return P.all(defers);\n      })\n      .spread(function (newCreds, hawkCreds, sessionData) {\n        var newWrapKb = sjcl.codec.hex.fromBits(\n          credentials.xor(\n            sjcl.codec.hex.toBits(keys.kB),\n            newCreds.unwrapBKey\n          )\n        );\n\n        var queryParams = '';\n        if (options.keys) {\n          queryParams = '?keys=true';\n        }\n\n        var sessionTokenId;\n        if (sessionData && sessionData.id) {\n          sessionTokenId = sessionData.id;\n        }\n\n        return self.request.send('/password/change/finish' + queryParams, 'POST', hawkCreds, {\n          wrapKb: newWrapKb,\n          authPW: sjcl.codec.hex.fromBits(newCreds.authPW),\n          sessionToken: sessionTokenId\n        })\n        .then(function (accountData) {\n          if (options.keys && accountData.keyFetchToken) {\n            accountData.unwrapBKey = sjcl.codec.hex.fromBits(newCreds.unwrapBKey);\n          }\n          return accountData;\n        });\n      });\n  };\n\n  /**\n   * Get 32 bytes of random data. This should be combined with locally-sourced entropy when creating salts, etc.\n   *\n   * @method getRandomBytes\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.getRandomBytes = function() {\n\n    return this.request.send('/get_random_bytes', 'POST');\n  };\n\n  /**\n   * Add a new device\n   *\n   * @method deviceRegister\n   * @param {String} sessionToken User session token\n   * @param {String} deviceName Name of device\n   * @param {String} deviceType Type of device (mobile|desktop)\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceRegister = function (sessionToken, deviceName, deviceType, options) {\n    var request = this.request;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceName, 'deviceName');\n        required(deviceType, 'deviceType');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          name: deviceName,\n          type: deviceType\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Update the name of an existing device\n   *\n   * @method deviceUpdate\n   * @param {String} sessionToken User session token\n   * @param {String} deviceId User-unique identifier of device\n   * @param {String} deviceName Name of device\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceUpdate = function (sessionToken, deviceId, deviceName, options) {\n    var request = this.request;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceId, 'deviceId');\n        required(deviceName, 'deviceName');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          id: deviceId,\n          name: deviceName\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Unregister an existing device\n   *\n   * @method deviceDestroy\n   * @param {String} sessionToken Session token obtained from signIn\n   * @param {String} deviceId User-unique identifier of device\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceDestroy = function (sessionToken, deviceId) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceId, 'deviceId');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          id: deviceId\n        };\n\n        return request.send('/account/device/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Get a list of all devices for a user\n   *\n   * @method deviceList\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceList = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/account/devices', 'GET', creds);\n      });\n  };\n\n  /**\n   * Get a list of user's sessions\n   *\n   * @method sessions\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessions = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/account/sessions', 'GET', creds);\n      });\n  };\n\n  /**\n   * Send an unblock code\n   *\n   * @method sendUnblockCode\n   * @param {String} email email where to send the login authorization code\n   * @param {Object} [options={}] Options\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sendUnblockCode = function (email, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n\n        var data = {\n          email: email\n        };\n\n        if (options && options.metricsContext) {\n          data.metricsContext = metricsContext.marshall(options.metricsContext);\n        }\n\n        return self.request.send('/account/login/send_unblock_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * Reject a login unblock code. Code will be deleted from the server\n   * and will not be able to be used again.\n   *\n   * @method rejectLoginAuthorizationCode\n   * @param {String} uid Account ID\n   * @param {String} unblockCode unblock code\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.rejectUnblockCode = function (uid, unblockCode) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(uid, 'uid');\n        required(unblockCode, 'unblockCode');\n\n        var data = {\n          uid: uid,\n          unblockCode: unblockCode\n        };\n\n        return self.request.send('/account/login/reject_unblock_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * Send an sms.\n   *\n   * @method sendSms\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} phoneNumber Phone number sms will be sent to\n   * @param {String} messageId Corresponding message id that will be sent\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.lang] Language that sms will be sent in\n   *   @param {Array} [options.features] Array of features to be enabled for the request\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   */\n  FxAccountClient.prototype.sendSms = function (sessionToken, phoneNumber, messageId, options) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(phoneNumber, 'phoneNumber');\n        required(messageId, 'messageId');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          phoneNumber: phoneNumber,\n          messageId: messageId\n        };\n        var requestOpts = {};\n\n        if (options) {\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.features) {\n            data.features = options.features;\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return request.send('/sms', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Get SMS status for the current user.\n   *\n   * @method smsStatus\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.country] country Country to force for testing.\n   */\n  FxAccountClient.prototype.smsStatus = function (sessionToken, options) {\n    var request = this.request;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function (creds) {\n        var url = '/sms/status';\n        if (options.country) {\n          url += '?country=' + encodeURIComponent(options.country);\n        }\n        return request.send(url, 'GET', creds);\n      });\n  };\n\n  /**\n   * Consume a signinCode.\n   *\n   * @method consumeSigninCode\n   * @param {String} code The signinCode entered by the user\n   * @param {String} flowId Identifier for the current event flow\n   * @param {Number} flowBeginTime Timestamp for the flow.begin event\n   */\n  FxAccountClient.prototype.consumeSigninCode = function (code, flowId, flowBeginTime) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(code, 'code');\n        required(flowId, 'flowId');\n        required(flowBeginTime, 'flowBeginTime');\n\n        return self.request.send('/signinCodes/consume', 'POST', null, {\n          code: code,\n          metricsContext: {\n            flowId: flowId,\n            flowBeginTime: flowBeginTime\n          }\n        });\n      });\n  };\n\n  /**\n   * Get the recovery emails associated with the signed in account.\n   *\n   * @method recoveryEmails\n   * @param {String} sessionToken SessionToken obtained from signIn\n   */\n  FxAccountClient.prototype.recoveryEmails = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/recovery_emails', 'GET', creds);\n      });\n  };\n\n  /**\n   * Create a new recovery email for the signed in account.\n   *\n   * @method recoveryEmailCreate\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email new email to be added\n   */\n  FxAccountClient.prototype.recoveryEmailCreate = function (sessionToken, email) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(sessionToken, 'email');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n\n        return request.send('/recovery_email', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Remove the recovery email for the signed in account.\n   *\n   * @method recoveryEmailDestroy\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email email to be removed\n   */\n  FxAccountClient.prototype.recoveryEmailDestroy = function (sessionToken, email) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(sessionToken, 'email');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n\n        return request.send('/recovery_email/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Check to see if the secondary email feature is enabled for this user.\n   *\n   * @method recoveryEmailSecondaryEmailEnabled\n   * @param {String} sessionToken SessionToken obtained from signIn\n   */\n  FxAccountClient.prototype.recoveryEmailSecondaryEmailEnabled = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/recovery_email/check_can_add_secondary_address', 'GET', creds);\n      });\n  };\n\n  /**\n   * Check for a required argument. Exposed for unit testing.\n   *\n   * @param {Value} val - value to check\n   * @param {String} name - name of value\n   * @throws {Error} if argument is falsey, or an empty object\n   */\n  FxAccountClient.prototype._required = required;\n\n  return FxAccountClient;\n});\n\n"]}